# Fixed core.yaml with single-line expressions

version: "1.0"
rules:
  # Working rule for idea to trust evaluation
  - id: "idea_generated_to_trust_eval"
    description: "Trigger trust evaluation for new ideas"
    namespace: "core"
    priority: 20
    enabled: true
    conditions:
      - type: "signal_type_match"
        signal_type: "IdeaGeneratedSignal"
    actions:
      - type: "trigger_component"
        component_id: "sentinel_instance_01"
        input_data_mapping:
          target_idea_id: "payload.id"
          frame_id: "payload.frame_id"
          objective: "payload.objective"

  # Complete loop after low trust assessment
  - id: "low_quality_loop_finisher"
    description: "Complete the loop for low-trust or unstable ideas"
    namespace: "system"
    priority: 100
    enabled: false
    conditions:
      - type: "signal_type_match"
        signal_type: "TrustAssessmentSignal"
      - type: "payload_expression"
        expression: "payload.is_stable == False or signal.trust_score <= 6.0"
    actions:
      - type: "emit_signal"
        signal_type: "GenerativeLoopFinishedSignal"
        payload:
          status: "completed_low_trust"
          final_idea_id: "{{ payload.idea_id }}"
          final_trust_score: "{{ signal.trust_score }}"
          reason: "low_trust_or_unstable"

  # Complete loop after high trust assessment - FIXED WITH SINGLE LINE
  - id: "high_trust_stable_loop_finisher"
    description: "Complete the loop for high-trust stable ideas"
    namespace: "system"
    priority: 150
    enabled: false
    conditions:
      - type: "signal_type_match"
        signal_type: "TrustAssessmentSignal"
      - type: "payload_expression"
        expression: "payload.is_stable == True and signal.trust_score > 6.0"
    actions:
      - type: "emit_signal"
        signal_type: "GenerativeLoopFinishedSignal"
        payload:
          status: "completed_high_trust"
          final_idea_id: "{{ payload.idea_id }}"
          final_trust_score: "{{ signal.trust_score }}"
          reason: "high_trust_stable_complete"
          quantifier_triggered: true

  # Error notification
  - id: "error_notification"
    description: "Log and notify on critical errors"
    namespace: "system"
    priority: 1
    enabled: true
    conditions:
      - type: "signal_type_match"
        signal_type: "ErrorSignal"
      - type: "payload_expression"
        expression: "payload.error_type == 'critical'"
    actions:
      - type: "emit_signal"
        signal_type: "SYSTEM_ALERT"
        payload:
          severity: "critical"
          requires_intervention: true