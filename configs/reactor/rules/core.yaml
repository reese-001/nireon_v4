version: "1.0"
rules:
  - id: "core_seed_to_explorer_rule"
    description: "When a SeedSignal is detected, trigger the primary explorer."
    namespace: "core"
    priority: 10
    enabled: false
    conditions:
      - type: "signal_type_match"
        signal_type: "SeedSignal"
    actions:
      - type: "trigger_component"
        component_id: "explorer_instance_01"
        input_data_mapping:
          text: "payload.text"
          id: "payload.seed_idea_id"
          objective: "payload.metadata.objective"
          metadata:
            depth: 0
  - id: "idea_generated_to_trust_eval"
    description: "Evaluate trust for newly generated ideas"
    namespace: "core"
    priority: 20
    enabled: true
    conditions:
      - type: "signal_type_match"
        signal_type: "IdeaGeneratedSignal"
    actions:
      - type: "trigger_component"
        component_id: "sentinel_instance_01"
        input_data_mapping:
          target_idea_id: "signal.payload.id"
          frame_id: "signal.payload.frame_id"
          objective: "signal.payload.objective"
  - id: "simple_test_loop_finisher"
    description: "Complete the loop after trust assessment. Acts as a fallback."
    namespace: "system"
    priority: 100 
    enabled: true
    conditions:
      - type: "signal_type_match"
        signal_type: "TrustAssessmentSignal"
      - type: "payload_expression"
        expression: "payload.is_stable == False or signal.trust_score <= 6.0"
    actions:
      - type: "emit_signal"
        signal_type: "GenerativeLoopFinishedSignal"
        payload:
          status: "completed_one_branch"
          final_idea_id: "{{ payload.idea_id }}"
          final_trust_score: "{{ signal.trust_score }}"
          final_depth: "{{ payload.assessment_details.metadata.depth | default(1) }}" 
          reason: "assessment_complete_fallback"
  - id: "error_notification"
    description: "Log and notify on critical errors"
    namespace: "system"
    priority: 1
    enabled: true
    conditions:
      - type: "signal_type_match"
        signal_type: "ErrorSignal"
      - type: "payload_expression"
        expression: "payload.error_type == 'critical'"
    actions:
      - type: "emit_signal"
        signal_type: "SYSTEM_ALERT"
        payload:
          severity: "critical"
          requires_intervention: true